import * as vscode from "vscode";
import { MinecraftProject } from "../../../core/project/MinecraftProject";
import { deployProject } from "../utils/deployProject";
import { AutoDeployStatusBar } from "../ui/AutoDeployStatusBar";
import { startAutoDeployWatcher, stopAutoDeployWatcher } from "../watchers/autoDeployWatcher";

export class AutoDeployManager {
    private active = false;
    private statusBar: AutoDeployStatusBar;

    constructor(private context: vscode.ExtensionContext) {
        this.statusBar = new AutoDeployStatusBar();
        context.subscriptions.push(this.statusBar);
    }

    public isActive(): boolean {
        return this.active;
    }

    public async toggle(minecraftProject: MinecraftProject): Promise<void> {
        // Si le d√©ploiement auto est actif, on l'arr√™te, sinon on le d√©marre
        if (this.active) {
            this.stop();
            vscode.window.showInformationMessage("üî¥ D√©ploiement auto d√©sactiv√©.");
        } else { // D√©marre le d√©ploiement auto
            await this.start(minecraftProject);
            vscode.window.showInformationMessage("üü¢ D√©ploiement auto activ√©.");
            await deployProject(minecraftProject); // d√©ploiement initial
        }
    }

    private async start(minecraftProject: MinecraftProject): Promise<void> {
        // D√©marre le watcher d'auto-d√©ploiement
        await startAutoDeployWatcher(this.context, minecraftProject);
        this.active = true;
        this.statusBar.update(true);
    }

    private stop(): void {
        stopAutoDeployWatcher();
        this.active = false;
        this.statusBar.update(false);
    }
}